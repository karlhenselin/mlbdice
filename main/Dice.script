local offscreen = vmath.vector3(-1000,-1000,-1000)
local showIt = vmath.vector3(0,0,1)
local goput = require "main.goput"
local state = require "main.gamestate"
local dieMax = 6;
local lastRoll = 1;
local p1roll1;
local p1roll2;
local p1die1;
local p1die2;
local p2roll1;
local p2roll2;
local p2die1;
local p2die2;

local function show(gohash)
	go.set_position(showIt, gohash)
end

local function hide(gohash)
	
	go.set_position(offscreen, gohash)
end

local function p1singledieroll(url, action_id, action)
	if action.released then
		hide(p1roll1)
		lastRoll = math.random(1,6);
		msg.post("p1die1#die1", "play_animation", {id = hash(lastRoll)})
		show(p1die1)
		hide(p1die2)
		state.stateChange(lastRoll)
	end
end

local function p1doubledieroll(url, action_id, action)
	if action.released then
		hide(p1roll2)
		local singledie = math.random(1,6);
		lastRoll = singledie;
		msg.post("p1die1#die1", "play_animation", {id = hash(lastRoll)})
		singledie = math.random(1,6);
		msg.post("p1die2#die2", "play_animation", {id = hash(singledie)})
		lastRoll = lastRoll + singledie;
		show(p1die1)
		show(p1die2)
		state.stateChange(lastRoll)
	end
end

local function p2singledieroll(url, action_id, action)
	if action.released then
		hide(p2roll1)
		hide(p2die2)
		lastRoll = math.random(1,6);
		msg.post("p2die1#die1", "play_animation", {id = hash(lastRoll)})
		show(p2die1)
		state.stateChange(lastRoll)
	end
end

local function p2doubledieroll(url, action_id, action)
	if action.released then
		hide(p2roll2)
		local singledie = math.random(1,6);
		lastRoll = singledie;
		msg.post("p2die1#die1", "play_animation", {id = hash(lastRoll)})
		singledie = math.random(1,6);
		msg.post("p2die2#die2", "play_animation", {id = hash(singledie)})
		lastRoll = lastRoll + singledie;
		show(p2die1)
		show(p2die2)
		state.stateChange(lastRoll)
	end
end

local function hideDice(player)
	if player == 1 then
		hide(p1roll1)
		hide(p1roll2)
		hide(p1die1)
		hide(p1die2)
	elseif player == 2 then
		hide(p2roll1)
		hide(p2roll2)
		hide(p2die1)
		hide(p2die2)
	end
end

function init(self)
	math.randomseed(os.time())
	p1roll1 = go.get_id("p1roll1")
	p1roll2 = go.get_id("p1roll2")
	p1die1 = go.get_id("p1die1")
	p1die2 = go.get_id("p1die2")
	p2roll1 = go.get_id("p2roll1")
	p2roll2 = go.get_id("p2roll2")
	p2die1 = go.get_id("p2die1")
	p2die2 = go.get_id("p2die2")

	goput.add("p1roll1#roll1", vmath.vector3(10,0,0), p1singledieroll)
	goput.add("p1roll2#roll2", vmath.vector3(10,0,0), p1doubledieroll)
	goput.add("p2roll1#roll1", vmath.vector3(500,0,0), p2singledieroll)
	goput.add("p2roll2#roll2", vmath.vector3(500,0,0), p2doubledieroll)
	hideDice(1)
	hideDice(2)
	show(p1roll1)
	label.set_text("scoreboard#balls", "0")
	label.set_text("scoreboard#strikes", "0")
	label.set_text("scoreboard#inning", "1")
	label.set_text("scoreboard#p1score", "0")
	label.set_text("scoreboard#p2score", "0")
	label.set_text("scoreboard#outs", "0")
end

function final(self)
	goput.remove("p1roll1#roll1")
	goput.remove("p1roll1#roll2")
	goput.remove("p2roll1#roll1")
	goput.remove("p2roll1#roll2")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("clearDice") then
		hideDice(message["player"])
	elseif message_id == hash("single") then
		if message["player"] == 1 then
			show(p1roll1)
		else
			show(p2roll1)
		end
	elseif message_id == hash("double") then
		if message["player"]  == 1 then
			show(p1roll2)
		else
			show(p2roll2)
		end
	end
end

function on_input(self, action_id, action)
	return goput.on_input(action_id, action)
end